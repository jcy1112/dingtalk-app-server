# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ test ]
  pull_request:
    branches: [ test ]

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: test
      run: |
        docker build -t dingtalk_back_end .
        docker images
        docker login --username=${{ secrets.DOCKER_USER }} registry.cn-hangzhou.aliyuncs.com -p ${{ secrets.DOCKER_PASSWORD }}
        docker tag dingtalk_back_end registry.cn-hangzhou.aliyuncs.com/zhanyeye/dingtalk_back_end
        docker push registry.cn-hangzhou.aliyuncs.com/zhanyeye/dingtalk_back_end
      # Run SSH
    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.TEST_HOST }}
        username: ${{ secrets.TEST_USER }}
        key: ${{ secrets.TEST_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          docker login --username=15776698528 registry.cn-hangzhou.aliyuncs.com -p ${{ secrets.DOCKER_PASSWORD }}
          docker pull registry.cn-hangzhou.aliyuncs.com/zhanyeye/dingtalk_back_end
          docker container stop ${{ secrets.DOCKER_CONTAINER }}

          docker run -d --rm -â€“net=host --name ${{ secrets.DOCKER_CONTAINER }} ${{ secrets.DOCKER_IMAGE }}
          docker image prune
